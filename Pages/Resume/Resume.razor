@page "/"
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@using JaredResumeApp.Models
@using JaredResumeApp.Components.SkillCard
@code {
    private string _message = "";
    private Portfolio resume = new Portfolio();
    private bool _isPrinting = false;
    private Skill? selectedSkill;
    private ElementReference descriptionElement;


    private async Task DownloadPDF()
    {
        await JS.InvokeVoidAsync("window.open", "/Assets/Jared_Denning.pdf", "_blank");
    }

    private async Task ShareResume()
    {

        var url = NavigationManager.Uri;
        await JS.InvokeVoidAsync("copyToClipboard", url);
        _message = "Link Copied!";
        StateHasChanged();
        await Task.Delay(1000);
        _message = "";
        StateHasChanged();
    }

    private async Task ShowSkillDescription(Skill skill)
    {
        if (selectedSkill != null)
        {
            // Add leaving class to trigger fade out
            await JS.InvokeVoidAsync("addFadeOutClass", descriptionElement);
            // Wait for animation
            await Task.Delay(100);
        }
        if (selectedSkill == skill)
        {
            selectedSkill = null;
        }
        else selectedSkill = skill;
        Console.WriteLine(skill.Name);
        StateHasChanged();
    }

    private async Task OpenTechStackModal()
    {
        await JS.InvokeVoidAsync("techStackModal.show");
    }

        // Define the Technologies List
    private List<Technology> Technologies = new List<Technology>
    {
        new Technology { Name = "Blazor", ImageFilePath = "/Assets/Svg/blazor.svg" },
        new Technology { Name = "ASP.NET Core", ImageFilePath = "/Assets/Svg/dotnet.svg" },
        new Technology { Name = "C#", ImageFilePath = "/Assets/Svg/csharp.svg" },
        new Technology { Name = "JavaScript", ImageFilePath = "/Assets/Svg/javascript.svg" },
        new Technology { Name = "HTML5", ImageFilePath = "/Assets/Svg/html5.svg" },
        new Technology { Name = "CSS3", ImageFilePath = "/Assets/Svg/css3.svg" },
        new Technology { Name = "Bootstrap", ImageFilePath = "/Assets/Svg/bootstrap.svg" },
        new Technology { Name = "Azure", ImageFilePath = "/Assets/Svg/azure.svg" },
        // Add more technologies as needed
    };
}

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="clipboard.js"></script>

</head>

<div id="action-buttons" class="@(_isPrinting ? "d-none" : "")">
    <button @onclick="DownloadPDF" class="btn btn-primary">
        <i class="bi bi-download"></i>
    </button>

    <button @onclick="ShareResume" class="btn btn-primary">
        <i class="bi bi-share"></i>
        <span class="message">@_message</span>
    </button>

    <a href="https://github.com/hewentto" target="_blank" class="btn btn-primary">
        <i class="bi bi-github" style="color: white;"></i>
    </a>

    <button @onclick="OpenTechStackModal" class="btn btn-primary" data-bs-toggle="tooltip" title="View Tech Stack">
        <i class="bi bi-stack"></i>
    </button>
</div>

<!-- Tech Stack Modal -->
<div class="modal fade" id="techStackModal" tabindex="-1" aria-labelledby="techStackModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="techStackModalLabel">This Web App Uses</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="tech-stack">
                    <div class="tech-icons">
                        @foreach(var tech in Technologies)
                        {
                            <div class="tech-icon">
                                <img src="@tech.ImageFilePath" alt="@tech.Name" style="width: 50px; height: 50px; background-color: #2980b9;">
                                <span>@tech.Name</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="resume" class="@(_isPrinting ? "print-only" : "")">
    <header>
        <h1>@resume.FullName</h1>
        <h3>@resume.Title</h3>
        <p>
            <span>@resume.Location</span> |
            <span>@resume.PhoneNumber</span> |
            <a href="mailto:@resume.Email">@resume.Email</a>
        </p>
    </header>

    <section id="skills">
        <h2>Skills</h2>
        <ul class="skills-list">
            @foreach (var skill in resume.Skills)
            {
                <li class="skill-item">
                    <SkillCard
                    Skill="@skill.Name" 
                    Description="@skill.Description" 
                    GitHubLink="@skill.GitHubLink" 
                    OnClick="@(() => ShowSkillDescription(skill))" 
                    IsActive="@(selectedSkill == skill)" />
                </li>
            }
        </ul>

        @if (selectedSkill != null)
        {
            <div class="skill-description" @key="selectedSkill" @ref="descriptionElement">
                <p>@selectedSkill.Description
                    @if (selectedSkill != null && selectedSkill.GitHubLink != null)
                    {
                        <a href="@selectedSkill.GitHubLink" 
                        target="_blank" 
                        class="github-link">
                            <i class="bi bi-github" style="color: #2980b9; font-size: 1.25rem; margin-left: 1rem;"></i></a>
                    }
                </p>
            </div>
        }

    </section>

    <section id="about-me">
        <h2>About Me</h2>
        <p>@resume.AboutMe</p>
    </section>

    <section id="work-experience">
        <h2>Work Experience</h2>
        @foreach (var experience in resume.WorkExperience)
        {
            <article class="experience-item">
                <p><b>@experience.Substring(0, experience.IndexOf(':') + 1)</b>@experience.Substring(experience.IndexOf(':') + 1)</p>
            </article>
        }
    </section>

    <section id="education">
        <h2>Education</h2>
        <p>@resume.Education</p>
    </section>
</div>
